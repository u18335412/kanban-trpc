// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id    String @id @default(uuid())
  title String
  text  String

  // To return `Date`s intact through the API we need to add data transformers
  // https://trpc.io/docs/data-transformers
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Column {
  id           String         @id @default(uuid())
  title        String
  Task         Task[]
  Board_Column Board_Column[]
}

model Board {
  id           String         @id @default(uuid())
  title        String
  Board_Column Board_Column[]
}

model Board_Column {
  id        String  @id @default(uuid())
  board_id  String
  column_id String
  board     Board?  @relation(fields: [board_id], references: [id])
  column    Column? @relation(fields: [column_id], references: [id])
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String
  column_id   String
  column      Column?    @relation(fields: [column_id], references: [id])
  Sub_Task    Sub_Task[]
}

model Sub_Task {
  id       String  @id @default(uuid())
  task_id  String
  complete Boolean
  task     Task?   @relation(fields: [task_id], references: [id])
}
